{"name":"Meteorlog","tagline":"Meteorlog is a tool to manage CloudWatch Logs. It defines the state of CloudWatch Logs using DSL, and updates CloudWatch Logs according to DSL.","body":"# Meteorlog\r\n\r\n[![Gem Version](https://badge.fury.io/rb/meteorlog.svg)](http://badge.fury.io/rb/meteorlog)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'meteorlog'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install meteorlog\r\n\r\n## Usage\r\n\r\n```sh\r\nexport AWS_ACCESS_KEY_ID='...'\r\nexport AWS_SECRET_ACCESS_KEY='...'\r\nexport AWS_REGION='us-east-1'\r\nmeteorlog -e -o Logsfile  # export CloudWatch Logs\r\nvi Logsfile\r\nmeteorlog -a --dry-run\r\nmeteorlog -a               # apply `Logsfile` to CloudWatch Logs\r\n```\r\n\r\n## Help\r\n\r\n```\r\nUsage: meteorlog [options]\r\n    -p, --profile PROFILE_NAME\r\n    -k, --access-key ACCESS_KEY\r\n    -s, --secret-key SECRET_KEY\r\n    -r, --region REGION\r\n    -a, --apply\r\n    -f, --file FILE\r\n        --dry-run\r\n    -e, --export\r\n    -o, --output FILE\r\n        --no-color\r\n        --debug\r\n```\r\n\r\n## Logsfile example\r\n\r\n```ruby\r\nrequire 'other/logsfile'\r\n\r\nlog_group \"/var/log/messages\" do\r\n  log_stream \"my-stream\"\r\n\r\n  # Please write the following if you do not want to manage log_streams\r\n  #any_log_streams\r\n\r\n  metric_filter \"MyAppAccessCount\" do\r\n    metric :name=>\"EventCount\", :namespace=>\"YourNamespace\", :value=>\"1\"\r\n  end\r\n\r\n  metric_filter \"MyAppAccessCount2\" do\r\n    # see http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/FilterAndPatternSyntax.html\r\n    filter_pattern '[ip, user, username, timestamp, request, status_code, bytes > 1000]'\r\n    metric :name=>\"EventCount2\", :namespace=>\"YourNamespace2\", :value=>\"2\"\r\n  end\r\nend\r\n\r\nlog_group \"/var/log/maillog\" do\r\n  log_stream \"my-stream2\"\r\n\r\n  metric_filter \"MyAppAccessCount\" do\r\n    filter_pattern '[..., status_code, bytes]'\r\n    metric :name=>\"EventCount3\", :namespace=>\"YourNamespace\", :value=>\"1\"\r\n  end\r\n\r\n  metric_filter \"MyAppAccessCount2\" do\r\n    filter_pattern '[ip, user, username, timestamp, request = *html*, status_code = 4*, bytes]'\r\n    metric :name=>\"EventCount4\", :namespace=>\"YourNamespace2\", :value=>\"2\"\r\n  end\r\nend\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}